[{"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/reportWebVitals.js":"1","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/App.js":"2","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Dropdowns.js":"3","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/functions/index.js":"4","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/index.js":"5","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongList.js":"6","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongSearch.js":"7","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Header.js":"8","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/useDarkMode.js":"9","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/useLocalStorage.js":"10","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongRow.js":"11","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/PopupModal.js":"12","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Footer.js":"13","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SpotifyButton.js":"14"},{"size":362,"mtime":1610577374461,"results":"15","hashOfConfig":"16"},{"size":7258,"mtime":1612916860577,"results":"17","hashOfConfig":"16"},{"size":3635,"mtime":1612582708434,"results":"18","hashOfConfig":"16"},{"size":675,"mtime":1610733896054,"results":"19","hashOfConfig":"16"},{"size":222,"mtime":1612550103228,"results":"20","hashOfConfig":"16"},{"size":1182,"mtime":1612911983277,"results":"21","hashOfConfig":"16"},{"size":878,"mtime":1612564390304,"results":"22","hashOfConfig":"16"},{"size":809,"mtime":1612912176687,"results":"23","hashOfConfig":"16"},{"size":418,"mtime":1612391724867,"results":"24","hashOfConfig":"16"},{"size":404,"mtime":1612391758770,"results":"25","hashOfConfig":"16"},{"size":689,"mtime":1612989120805,"results":"26","hashOfConfig":"16"},{"size":2706,"mtime":1612582703827,"results":"27","hashOfConfig":"16"},{"size":649,"mtime":1612547644645,"results":"28","hashOfConfig":"16"},{"size":932,"mtime":1612916305059,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n2ur3t",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/reportWebVitals.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/App.js",["64"],"\nimport React, {useState, useEffect} from \"react\"\nimport moment from \"moment\"\nimport axios from \"axios\"\nimport Dropdowns from \"./components/Dropdowns\"\nimport SongList from \"./components/SongList\"\nimport SongSearch from \"./components/SongSearch\"\nimport PopupModal from \"./components/PopupModal\"\nimport Footer from \"./components/Footer\"\nimport Header from \"./components/Header\"\nimport SpotifyButton from \"./components/SpotifyButton\"\nimport { useDarkMode } from \"./utils/useDarkMode\"\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useLocalStorage } from \"./utils/useLocalStorage\";\nimport queryString from 'query-string'\n\n\nfunction App() {\n  // const parsed = queryString.parse(window.location.search)\n  // const [accessToken, setAccessToken] = useLocalStorage('access_token', parsed.access_token)\n  const [accessToken, setAccessToken] = useState(\"\")\n  const [spotifyConnect, setSpotifyConnect] = useState(false)\n  const [darkMode, setDarkMode] = useDarkMode();\n  const [isFetching, setIsFetching] = useState(true)\n  const [openModal, setOpenModal] = useState(false)\n  const [playlistURL, setPlaylistURL] = useState(\"\")\n  const [failedPlaylistCreate, setFailedPlaylistCreate] = useState(false)\n  const [isCreatingPlaylist, setIsCreatingPlaylist] = useState(false)\n  const paletteType = darkMode ? \"dark\" : \"light\";\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: paletteType,\n      secondary: {\n        main: \"rgb(17, 185, 91)\"\n      }\n    }\n  });\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  const [date, setDate] = useLocalStorage('date', {\n    year: moment().format(\"YYYY\"),\n    month: moment().format('MM'),\n    day: moment().format('DD')\n  })\n  const [chart, setChart] = useState(null)\n  const [filter, setFilter] = useLocalStorage('filter', \"\")\n  const [userId, setUserId] = useState(\"\")\n  const [notFoundList, setNotFoundList] = useState([])\n  const dateFormatted = `${date.year}-${date.month}-${date.day}`\n\n  const handleSpotifyConnect = async () => {\n    window.open(`${process.env.REACT_APP_BILLBOARD_API_BASE_URL || 'http://localhost:5500' }/auth-spotify`, '_self');\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n\n  useEffect(()=> {\n    if(!openModal) {\n      setFailedPlaylistCreate(false)\n      setNotFoundList([])\n    }\n  },[openModal])\n\n  const handleCreatePlaylist = async () => {\n    setIsCreatingPlaylist(true)\n    try {\n      const newPlaylist = await axios({\n        url: `https://api.spotify.com/v1/users/${userId}/playlists`,\n        method: 'POST',\n        headers: {\n          'Authorization': \"Bearer \" + accessToken,\n          'Content-Type': 'application/json'\n        },\n        data: {\n          name: `Hot 100 from ${dateFormatted}`,\n          public: true,\n          description: 'created using Do-Re-Minisce (doreminisce.kylerichardson.tech)'\n        }\n      })\n      const playlistId = newPlaylist.data.id\n      const tracksToAdd = await findTracksOnSpotify()\n      const tracksToAddFilteredNotFound = tracksToAdd.filter(track=> !track.includes(\"NOTFOUND\"))\n      const addedTracks = await axios({\n          url: `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n          method: 'POST',\n          headers: {\n            'Authorization': \"Bearer \" + accessToken,\n            'Content-Type': 'application/json'\n          },\n          data: {\n            \"uris\": tracksToAddFilteredNotFound\n          }\n      })\n      setPlaylistURL(newPlaylist.data.external_urls.spotify)\n    \n    } catch(err) {\n      console.log(err)\n      setFailedPlaylistCreate(true) \n    }\n    handleOpenModal()\n    setIsCreatingPlaylist(false)\n  }\n\n  const findTracksOnSpotify = async () => {\n    try {\n      const searchAccessToken = await axios({\n        url: `${process.env.REACT_APP_BILLBOARD_API_BASE_URL || 'http://localhost:5500' }/auth-search`,\n        method: 'GET'\n      })\n      const trackList = await Promise.all(chart.songs.map(async song=> {\n        let songId=\"NOTFOUND\"\n        let simplifiedArtistSearch = song.artist.split(\" \")[0]\n        if (simplifiedArtistSearch.toLowerCase()===\"the\" || simplifiedArtistSearch.toLowerCase()===\"a\") {\n          simplifiedArtistSearch = song.artist.split(\" \")[1]\n        }\n        try {\n          const result = await axios({\n          url: 'https://api.spotify.com/v1/search',\n          method: 'GET',\n          headers: {\n            'Authorization': \"Bearer \" + searchAccessToken.data,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            q: `${song.title} ${simplifiedArtistSearch}`,\n            type: \"track\",\n            limit: 1\n          }\n        })\n        if (result.data.tracks.items)\n          songId = result.data.tracks.items[0].id\n        } catch(err ) {\n          // console.log(err)\n          setNotFoundList(prev => [...prev, song])\n        }\n        return `spotify:track:${songId}`\n      }))\n      return trackList\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(()=> {\n    const parsed = queryString.parse(window.location.search)\n    if (parsed.access_token) {\n      // if (parsed) {\n      //     setAccessToken(parsed.access_token)\n      //    window.open(`${process.env.REACT_APP_URL || 'http://localhost:3000'}`, '_self')\n      // }\n      setSpotifyConnect(true)\n      axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          \"Authorization\": \"Bearer \" + parsed.access_token\n        }\n      })\n      .then(res=> {\n        setUserId(res.data.id)\n        setAccessToken(parsed.access_token)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }, [])\n\n  \n  useEffect(()=> {\n    async function fetchChart() {\n      setIsFetching(true)\n      await axios.get(`${process.env.REACT_APP_BILLBOARD_API_BASE_URL || 'http://localhost:5500' }/chart/${dateFormatted}`)\n      .then(res=> {\n        setChart(res.data)\n      })\n      .catch(err => {console.log(err)})\n      setIsFetching(false)\n    }\n    fetchChart()\n    \n  },[date, dateFormatted])\n  \n  \n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <div className=\"content-wrapper\">\n          <PopupModal \n            failedPlaylistCreate = {failedPlaylistCreate} \n            openModal = {openModal} \n            notFoundList = {notFoundList} \n            handleCloseModal = {handleCloseModal}\n            playlistURL = {playlistURL}\n          />\n          <Header toggleDarkMode={toggleDarkMode}/>\n          <Dropdowns date = {date} setDate = {setDate}/>\n          <SongSearch filter={filter} setFilter = {setFilter}/>\n          {isFetching ?  <CircularProgress color=\"secondary\"/> : \n          <>\n            <SpotifyButton \n                spotifyConnect = {spotifyConnect}\n                handleCreatePlaylist={handleCreatePlaylist}\n                handleSpotifyConnect={handleSpotifyConnect}\n                isCreatingPlaylist = {isCreatingPlaylist}/>\n            <SongList filter={filter} chart = {chart} dateFormatted = {dateFormatted}/>\n            </>}\n        </div>\n        <Footer/>\n      </div>\n      \n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Dropdowns.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/functions/index.js",[],["65","66"],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/index.js",[],["67","68"],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongList.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongSearch.js",["69"],"import React, {useState, useEffect} from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\nconst SongSearch = ({filter, setFilter})=> {\n  const handleChange = (event) => {\n    event.preventDefault()\n    const {value} = event.target\n    setFilter(value)\n  }\n  const handleClear = (event) => {\n    event.preventDefault()\n    setFilter(\"\")\n  }\n\n  useEffect(()=> {\n  },[])\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"15px\", marginBottom: \"15px\"}}>\n          {/* <p>Search List:</p> */}\n            <TextField \n              value={filter}\n              label=\"Search List\"\n              variant=\"outlined\"\n              onChange={handleChange}\n            />\n            <Button color=\"primary\" onClick={handleClear}>x</Button>\n        </div>\n    )\n}\n\nexport default SongSearch;\n","/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Header.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/useDarkMode.js",[],["70","71"],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/utils/useLocalStorage.js",[],["72","73"],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SongRow.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/PopupModal.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/Footer.js",[],"/Users/kylerichardson/Documents/GitHub/personal-projects/doreminisce/src/components/SpotifyButton.js",[],{"ruleId":"74","severity":1,"message":"75","line":91,"column":13,"nodeType":"76","messageId":"77","endLine":91,"endColumn":24},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"74","severity":1,"message":"84","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"78","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"78","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},"no-unused-vars","'addedTracks' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"'useState' is defined but never used.",["89"],["90"],["89"],["90"],"no-global-assign","no-unsafe-negation"]